static_resources: 
  listeners: 
    - address:
        socket_address:
          address: 127.0.0.1
          port_value: 8880
      filter_chains:
      - filters: 
        - name: envoy.filters.network.http_connection_manager
          typed_config: 
            '@type': "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager"
            stat_prefix: ingress_http
            http_filters:
            - name: envoy.filters.http.router
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
            route_config: 
              name: all
              virtual_hosts:
                - name: all_traffic
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: backend_cluster
    - address:
        socket_address:
          address: 127.0.0.1
          port_value: 8881
      filter_chains:
      - filters: 
        - name: envoy.filters.network.http_connection_manager
          typed_config: 
            '@type': "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager"
            stat_prefix: ingress_http
            access_log:
            - name: envoy.access_loggers.stdout
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
            - name: envoy.access_loggers.stderr 
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StderrAccessLog
            http_filters:
            - name: envoy.filters.http.tap
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.tap.v3.Tap
                common_config:
                  static_config:
                    match_config:
                      http_response_headers_match: 
                        headers:
                          name: ":status"
                          exact_match: "200"
                    output_config:
                      sinks:
                        - format: PROTO_TEXT
                          file_per_tap:
                            path_prefix: /Users/shivam/Repositories/Envoy/taps/ingress/
            - name: envoy.filters.http.local_ratelimit
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
                stat_prefix: http_local_rate_limiter
                token_bucket:
                  max_tokens: 1
                  tokens_per_fill: 1
                  fill_interval: 5s
                filter_enabled:
                  runtime_key: local_rate_limit_enabled
                  default_value:
                    numerator: 100
                    denominator: HUNDRED
                filter_enforced:
                  runtime_key: local_rate_limit_enforced
                  default_value:
                    numerator: 100
                    denominator: HUNDRED
                response_headers_to_add:
                  - append: false
                    header:
                      key: x-envoy-ratelimited
                      value: 'true'
            - name: envoy.filters.http.router
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
            route_config: 
              name: all
              virtual_hosts:
                - name: all_traffic
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: collector_cluster
    - address: 
        socket_address:
          address: 127.0.0.1
          port_value: 8888
      filter_chains:
      - filters: 
        - name: envoy.filters.network.http_connection_manager
          typed_config: 
            '@type': "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager"
            stat_prefix: ingress_http
            http_filters:
            - name: envoy.filters.http.router
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
            route_config: 
              name: all
              virtual_hosts:
                - name: all_traffic
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      retry_policy: 
                        retry_host_predicate:
                          name: envoy.retry_host_predicates.previous_hosts
                          typed_config:
                            "@type": type.googleapis.com/envoy.extensions.retry.host.previous_hosts.v3.PreviousHostsPredicate
                        retry_on: 5xx,gateway-error,reset,connect-failure,envoy-ratelimited,retriable-4xx,refused-stream,retriable-status-codes,retriable-headers,http3-post-connect-failure
                      weighted_clusters:
                        total_weight: 100
                        clusters: 
                          - name: backend_cluster
                            weight: 99
                          - name: all_cluster
                            weight: 1
                      # cluster: all_cluster

    - address: 
        socket_address:
          address: 127.0.0.1
          port_value: 9999
      filter_chains:
        filters: 
        - name: envoy.filters.network.http_connection_manager
          typed_config: 
            '@type': "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager"
            stat_prefix: egress_http
            http_filters:
            - name: envoy.filters.http.tap
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.tap.v3.Tap
                common_config:
                  static_config:
                    match_config:
                      any_match: true
                    output_config:
                      sinks:
                        - format: PROTO_TEXT
                          file_per_tap:
                            path_prefix: /Users/shivam/Repositories/Envoy/taps/egress/
            - name: envoy.filters.http.router
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
            route_config: 
              name: all
              virtual_hosts:
                - name: all_traffic
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: backend_cluster
  clusters: 
    - name: all_cluster
      connect_timeout: 1s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: all_cluster
        endpoints: 
          - lb_endpoints:
            - endpoint: 
                address:
                  socket_address: 
                    address: 127.0.0.1
                    port_value: 8881
          - lb_endpoints:
            - endpoint: 
                address:
                  socket_address: 
                    address: 127.0.0.1
                    port_value: 8880
    - name: collector_cluster
      connect_timeout: 1s
      type: strict_dns
      lb_policy: round_robin
      max_requests_per_connection: 1
      load_assignment:
        cluster_name: collector_cluster
        endpoints: 
          - lb_endpoints:
            - endpoint: 
                address:
                  socket_address: 
                    address: 127.0.0.1
                    port_value: 1111
    - name: backend_cluster
      connect_timeout: 1s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: backend_cluster
        endpoints: 
          - lb_endpoints:
            - endpoint: 
                address:
                  socket_address: 
                    address: 127.0.0.1
                    port_value: 2222

admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
